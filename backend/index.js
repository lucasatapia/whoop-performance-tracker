/* backend/index.js */

import express from "express";
import cors from "cors";
import pg from "pg";
import "dotenv/config";

import { join, dirname } from "path";
import { fileURLToPath } from "url";
import authRoutes from "./routes/auth.js";
import workoutRoutes from "./routes/workouts.js";

const __dirname = dirname(fileURLToPath(import.meta.url));

/* ─────────────  APP SETUP  ───────────── */
const app = express();
app.use(cors());
app.use(express.json());

/* ─────────────  API ROUTES  ───────────── */
app.use("/auth", authRoutes);
app.use("/workouts", workoutRoutes);

/* ─────────────  STATIC WEB BUILD  ─────────────
   Serves the files generated by `expo export -p web`
   that live in frontend/dist/                                */
app.use(express.static(join(__dirname, "../frontend/dist")));

/* ─────────────  HEALTH CHECK  ───────────── */
app.get("/health", (_, res) => res.send("ok"));

/* ─────────────  SPA FALLBACK  ───────────── */
app.use((_, res) =>
   res.sendFile(join(__dirname, "../frontend/dist/index.html")),
);

/* ─────────────  DATABASE POOL  ───────────── */
const pool = new pg.Pool({ connectionString: process.env.DATABASE_URL });
// If your DB requires SSL, uncomment the next 2 lines:
// const pool = new pg.Pool({ connectionString: process.env.DATABASE_URL,
//   ssl: { rejectUnauthorized: false } });

/* ─────────────  START SERVER  ───────────── */
const PORT = process.env.PORT || 3000;
app.listen(PORT, "0.0.0.0", () => console.log(`API listening on :${PORT}`));
